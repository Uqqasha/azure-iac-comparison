{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string"
        },
        "ownerObjectId": {
            "type": "string"
        },
        "armClientObjectId": {
            "type": "string"
        },
        "storageAccountSKU": {
            "type": "string",
            "defaultValue": "Standard_LRS"
        },
        "storageAccountKind": {
            "type": "string",
            "defaultValue": "StorageV2"
        },
        "storageContainerName": {
            "type": "string",
            "defaultValue": "scripts"
        },
        "keyVaultSKU": {
            "type": "string",
            "defaultValue": "Standard"
        },
        "logAnalyticsWorkspaceName": {
            "type": "string",
            "defaultValue": "log-shared-arm-01"
        },
        "logAnalyticsWorkspaceSKU": {
            "type": "string",
            "defaultValue": "PerGB2018"
        },
        "logAnalyticsWorkspaceRetentionDays": {
            "type": "string",
            "defaultValue": "30"
        },
        "automationAccountSku": {
            "type": "string",
            "defaultValue": "Basic"
        },
        "adminUsername": {
            "type": "string"
        },
        "vnetName": {
            "type": "string",
            "defaultValue": "vnet-shared-01"
        },
        "vnetAddressPrefix": {
            "type": "string",
            "defaultValue": "10.1.0.0/16"
        },
        "vnetDnsServers": {
            "type": "array"
        },
        "subnetsDetails": {
            "type": "object",
            "defaultValue": {
                "subnets": [
                {
                    "name": "AzureBastionSubnet",
                    "addressPrefix": "10.1.0.0/27",
                    "privateEndpointNetworkPolicies": "Disabled",
                    "securityRules": [
                    {
                        "name": "AllowHttpsInbound",
                        "properties": {
                        "direction": "Inbound",
                        "priority": 100,
                        "sourceAddressPrefix": "Internet",
                        "destinationAddressPrefix": "*",
                        "sourcePortRange": "*",
                        "destinationPortRanges": [
                            "443"
                        ],
                        "destinationPortRange": "",
                        "access": "Allow",
                        "protocol": "Tcp"
                        }
                    },
                    {
                        "name": "AllowGatewayManagerInbound",
                        "properties": {
                        "direction": "Inbound",
                        "priority": 110,
                        "sourceAddressPrefix": "GatewayManager",
                        "destinationAddressPrefix": "*",
                        "sourcePortRange": "*",
                        "destinationPortRanges": [
                            "443"
                        ],
                        "destinationPortRange": "",
                        "access": "Allow",
                        "protocol": "Tcp"
                        }
                    },
                    {
                        "name": "AllowAzureLoadBalancerInbound",
                        "properties": {
                        "direction": "Inbound",
                        "priority": 120,
                        "sourceAddressPrefix": "AzureLoadBalancer",
                        "destinationAddressPrefix": "*",
                        "sourcePortRange": "*",
                        "destinationPortRanges": [
                            "443"
                        ],
                        "destinationPortRange": "",
                        "access": "Allow",
                        "protocol": "Tcp"
                        }
                    },
                    {
                        "name": "AllowBastionCommunicationInbound",
                        "properties": {
                        "direction": "Inbound",
                        "priority": 130,
                        "sourceAddressPrefix": "VirtualNetwork",
                        "destinationAddressPrefix": "*",
                        "sourcePortRange": "*",
                        "destinationPortRanges": [
                            "8080",
                            "5701"
                        ],
                        "destinationPortRange": "",
                        "access": "Allow",
                        "protocol": "*"
                        }
                    },
                    {
                        "name": "AllowSshRdpOutbound",
                        "properties": {
                        "direction": "Outbound",
                        "priority": 140,
                        "sourceAddressPrefix": "*",
                        "destinationAddressPrefix": "VirtualNetwork",
                        "sourcePortRange": "*",
                        "destinationPortRanges": [
                            "22",
                            "3389"
                        ],
                        "destinationPortRange": "",
                        "access": "Allow",
                        "protocol": "*"
                        }
                    },
                    {
                        "name": "AllowAzureCloudOutbound",
                        "properties": {
                        "direction": "Outbound",
                        "priority": 150,
                        "sourceAddressPrefix": "*",
                        "destinationAddressPrefix": "AzureCloud",
                        "sourcePortRange": "*",
                        "destinationPortRanges": [
                            "443"
                        ],
                        "destinationPortRange": "",
                        "access": "Allow",
                        "protocol": "Tcp"
                        }
                    },
                    {
                        "name": "AllowBastionCommunicationOutbound",
                        "properties": {
                        "direction": "Outbound",
                        "priority": 160,
                        "sourceAddressPrefix": "VirtualNetwork",
                        "destinationAddressPrefix": "VirtualNetwork",
                        "sourcePortRange": "*",
                        "destinationPortRanges": [
                            "8080",
                            "5701"
                        ],
                        "destinationPortRange": "",
                        "access": "Allow",
                        "protocol": "*"
                        }
                    },
                    {
                        "name": "AllowGetSessionInformationOutbound",
                        "properties": {
                        "direction": "Outbound",
                        "priority": 170,
                        "sourceAddressPrefix": "*",
                        "destinationAddressPrefix": "Internet",
                        "sourcePortRange": "*",
                        "destinationPortRanges": [
                            "80"
                        ],
                        "destinationPortRange": "",
                        "access": "Allow",
                        "protocol": "*"
                        }
                    }
                    ]
                },
                {
                    "name": "snet-adds-01",
                    "addressPrefix": "10.1.1.0/24",
                    "privateEndpointNetworkPolicies": "Disabled",
                    "securityRules": [
                    {
                        "name": "AllowVirtualNetworkInbound",
                        "properties": {
                        "direction": "Inbound",
                        "priority": 100,
                        "sourceAddressPrefix": "VirtualNetwork",
                        "destinationAddressPrefix": "VirtualNetwork",
                        "sourcePortRange": "*",
                        "destinationPortRanges": [],
                        "destinationPortRange": "*",
                        "access": "Allow",
                        "protocol": "*"
                        }
                    },
                    {
                        "name": "AllowVirtualNetworkOutbound",
                        "properties": {
                        "direction": "Outbound",
                        "priority": 110,
                        "sourceAddressPrefix": "VirtualNetwork",
                        "destinationAddressPrefix": "VirtualNetwork",
                        "sourcePortRange": "*",
                        "destinationPortRanges": [],
                        "destinationPortRange": "*",
                        "access": "Allow",
                        "protocol": "*"
                        }
                    },
                    {
                        "name": "AllowInternetOutbound",
                        "properties": {
                        "direction": "Outbound",
                        "priority": 120,
                        "sourceAddressPrefix": "*",
                        "destinationAddressPrefix": "Internet",
                        "sourcePortRange": "*",
                        "destinationPortRanges": [],
                        "destinationPortRange": "*",
                        "access": "Allow",
                        "protocol": "*"
                        }
                    }
                    ]
                },
                {
                    "name": "snet-misc-01",
                    "addressPrefix": "10.1.2.0/24",
                    "privateEndpointNetworkPolicies": "Disabled",
                    "securityRules": [
                    {
                        "name": "AllowVirtualNetworkInbound",
                        "properties": {
                        "direction": "Inbound",
                        "priority": 100,
                        "sourceAddressPrefix": "VirtualNetwork",
                        "destinationAddressPrefix": "VirtualNetwork",
                        "sourcePortRange": "*",
                        "destinationPortRanges": [],
                        "destinationPortRange": "*",
                        "access": "Allow",
                        "protocol": "*"
                        }
                    },
                    {
                        "name": "AllowVirtualNetworkOutbound",
                        "properties": {
                        "direction": "Outbound",
                        "priority": 110,
                        "sourceAddressPrefix": "VirtualNetwork",
                        "destinationAddressPrefix": "VirtualNetwork",
                        "sourcePortRange": "*",
                        "destinationPortRanges": [],
                        "destinationPortRange": "*",
                        "access": "Allow",
                        "protocol": "*"
                        }
                    },
                    {
                        "name": "AllowInternetOutbound",
                        "properties": {
                        "direction": "Outbound",
                        "priority": 120,
                        "sourceAddressPrefix": "*",
                        "destinationAddressPrefix": "Internet",
                        "sourcePortRange": "*",
                        "destinationPortRanges": [],
                        "destinationPortRange": "*",
                        "access": "Allow",
                        "protocol": "*"
                        }
                    }
                    ]
                },
                {
                    "name": "snet-misc-02",
                    "addressPrefix": "10.1.3.0/24",
                    "privateEndpointNetworkPolicies": "Disabled",
                    "securityRules": [
                    {
                        "name": "AllowVirtualNetworkInbound",
                        "properties": {
                        "direction": "Inbound",
                        "priority": 100,
                        "sourceAddressPrefix": "VirtualNetwork",
                        "destinationAddressPrefix": "VirtualNetwork",
                        "sourcePortRange": "*",
                        "destinationPortRanges": [],
                        "destinationPortRange": "*",
                        "access": "Allow",
                        "protocol": "*"
                        }
                    },
                    {
                        "name": "AllowVirtualNetworkOutbound",
                        "properties": {
                        "direction": "Outbound",
                        "priority": 110,
                        "sourceAddressPrefix": "VirtualNetwork",
                        "destinationAddressPrefix": "VirtualNetwork",
                        "sourcePortRange": "*",
                        "destinationPortRanges": [],
                        "destinationPortRange": "*",
                        "access": "Allow",
                        "protocol": "*"
                        }
                    },
                    {
                        "name": "AllowInternetOutbound",
                        "properties": {
                        "direction": "Outbound",
                        "priority": 120,
                        "sourceAddressPrefix": "*",
                        "destinationAddressPrefix": "Internet",
                        "sourcePortRange": "*",
                        "destinationPortRanges": [],
                        "destinationPortRange": "*",
                        "access": "Allow",
                        "protocol": "*"
                        }
                    }
                    ]
                }
                ]
            }
        },
        "bastionName": {
            "type": "string",
            "defaultValue": "bst-ARM-01"
        },
        "bastionPipSKU": {
            "type": "string",
            "defaultValue": "Standard"
        },
        "bastionPipAllocation": {
            "type": "string",
            "defaultValue": "Static"
        },
        "vmAddsName": {
            "type": "string",
            "defaultValue": "adds1"
        },
        "vmAddsNicPrivateIpAllocationMethod": {
            "type": "string",
            "defaultValue": "Dynamic"
        },
        "vmAddsSize": {
            "type": "string",
            "defaultValue": "Standard_B1s"
        },
        "vmAddsImagePublisher": {
            "type": "string",
            "defaultValue": "MicrosoftWindowsServer"
        },
        "vmAddsImageOffer": {
            "type": "string",
            "defaultValue": "WindowsServer"
        },
        "vmAddsImageSku": {
            "type": "string",
            "defaultValue": "2022-datacenter-core-g2"
        },
        "vmAddsImageVersion": {
            "type": "string",
            "defaultValue": "Latest"
        },
        "vmAddsStorageAccountCaching": {
            "type": "string",
            "defaultValue": "ReadWrite"
        },
        "vmAddsStorageAccountType": {
            "type": "string",
            "defaultValue": "Standard_LRS"
        }
    },
    "functions": [],
    "variables": {
        "storageAccountResourceId": "[resourceId('Microsoft.Storage/storageAccounts', concat('st', uniqueString(resourceGroup().id)))]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2023-01-01",
            "name": "[concat('st', uniqueString(resourceGroup().id))]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('storageAccountSKU')]"

            },
            "kind": "[parameters('storageAccountKind')]"
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2023-01-01",
            "name": "[concat(concat('st', uniqueString(resourceGroup().id)), '/default/', parameters('storageContainerName'))]",
            "dependsOn": [
                "[concat('st', uniqueString(resourceGroup().id))]"
            ]
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces",
            "apiVersion": "2022-10-01",
            "name": "[parameters('logAnalyticsWorkspaceName')]",
            "location": "[parameters('location')]",
            "properties": {
                "sku": {
                    "name": "[parameters('logAnalyticsWorkspaceSKU')]"
                },
                "retentionInDays": "[parameters('logAnalyticsWorkspaceRetentionDays')]"
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2023-02-01",
            "name": "[concat('kv-', uniqueString(resourceGroup().id))]",
            "location": "[parameters('location')]",
            "properties": {
                "tenantId": "[subscription().tenantId]",
                "sku": {
                    "family": "A",
                    "name": "[parameters('keyVaultSKU')]"
                },
                "enabledForTemplateDeployment": true,
                "softDeleteRetentionInDays": 7,
                //"enablePurgeProtection": false,
                "enableSoftDelete": false,
                "accessPolicies": [
                    {
                        "tenantId": "[subscription().tenantId]",
                        "objectId": "[parameters('ownerObjectId')]",
                        "permissions": {
                            "secrets": ["Get", "List", "Set", "Delete", "Purge"]
                        }
                    },
                    {
                        "tenantId": "[subscription().tenantId]",
                        "objectId": "[parameters('armClientObjectId')]",
                        "permissions": {
                            "secrets": ["Get", "Set", "Delete", "Purge"]
                        }
                    }
                ]
            },
            "resources": [
                {
                    "type": "secrets",
                    "apiVersion": "2023-02-01",
                    "name": "adminuser",
                    "dependsOn": [
                        "[concat('kv-', uniqueString(resourceGroup().id))]"
                    ],
                    "properties": {
                        "value": "[parameters('adminUsername')]"
                    }
                },
                {
                    "type": "secrets",
                    "apiVersion": "2023-02-01",
                    "name": "adminpassword",
                    "dependsOn": [
                        "[concat('kv-', uniqueString(resourceGroup().id))]"
                    ],
                    "properties": {
                        "value": "[concat('P-', uniqueString(resourceGroup().id, deployment().name))]"
                    }
                },
                {
                    "type": "secrets",
                    "apiVersion": "2023-02-01",
                    "name": "[concat('st', uniqueString(resourceGroup().id))]",
                    "dependsOn": [
                        "[concat('kv-', uniqueString(resourceGroup().id))]"
                    ],
                    "properties": {
                        "value": "[listKeys(variables('storageAccountResourceId'), '2023-01-01').keys[0].value]"
                    }
                },
                {
                    "type": "secrets",
                    "apiVersion": "2023-02-01",
                    "name": "[concat(parameters('logAnalyticsWorkspaceName'), '-ID')]",
                    "dependsOn": [
                        "[concat('kv-', uniqueString(resourceGroup().id))]"
                    ],
                    "properties": {
                        "value": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces/', parameters('logAnalyticsWorkspaceName')), '2022-10-01').primarySharedKey]"
                    }
                }
            ],
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
            ]
        },
        // {
        //     "type": "Microsoft.Automation/automationAccounts",
        //     "apiVersion": "2022-08-08",
        //     "name": "[concat('auto-', uniqueString(resourceGroup().id), '-01')]",
        //     "location": "[resourceGroup().location]",
        //     "properties": {
        //         "sku": {
        //             "name": "[parameters('automationAccountSku')]"
        //         }
        //     }
        // },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2023-04-01",
            "name": "[parameters('vnetName')]",
            "location": "[parameters('location')]",
            "tags": {},
            "properties": {
                "dhcpOptions": {
                    "dnsServers": "[parameters('vnetDnsServers')]"
                },
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('vnetAddressPrefix')]"
                  ]
                },
                "copy": [
                    {
                        "name": "subnets",
                        "dependsOn": [
                            "[resourceId('Microsoft.Network/networkSecurityGroups/', concat('nsg-', parameters('vnetName'), '.', parameters('subnetsDetails').subnets[copyIndex('subnets')].name))]"
                        ],
                        "count": "[length(parameters('subnetsDetails').subnets)]",
                        "input": {
                            "name": "[parameters('subnetsDetails').subnets[copyIndex('subnets')].name]",
                            "properties": {
                                "addressPrefix": "[parameters('subnetsDetails').subnets[copyIndex('subnets')].addressPrefix]",
                                "privateEndpointNetworkPolicies": "[parameters('subnetsDetails').subnets[copyIndex('subnets')].privateEndpointNetworkPolicies]",
                                "networkSecurityGroup": {
                                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups/', concat('nsg-', parameters('vnetName'), '.', parameters('subnetsDetails').subnets[copyIndex('subnets')].name))]"
                                }
                            }
                        }
                    }
                ]
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', concat('nsg-', parameters('vnetName'), '.', parameters('subnetsDetails').subnets[0].name))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', concat('nsg-', parameters('vnetName'), '.', parameters('subnetsDetails').subnets[1].name))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', concat('nsg-', parameters('vnetName'), '.', parameters('subnetsDetails').subnets[2].name))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', concat('nsg-', parameters('vnetName'), '.', parameters('subnetsDetails').subnets[3].name))]"
            ]
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2023-04-01",
            "location": "[parameters('location')]",
            "name": "[concat('nsg-', parameters('vnetName'), '.', parameters('subnetsDetails').subnets[copyIndex()].name)]",
            "properties": {
                "securityRules": "[parameters('subnetsDetails').subnets[copyIndex()].securityRules]"
            },
            "copy": {
                "name": "NSG",
                "count": "[length(parameters('subnetsDetails').subnets)]"
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2023-04-01",
            "name": "[concat('pip-', parameters('bastionName'))]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('bastionPipSKU')]"
            },
            "properties": {
                "publicIPAllocationMethod": "[parameters('bastionPipAllocation')]"
            }
        },
        {
            "type": "Microsoft.Network/bastionHosts",
            "apiVersion": "2023-04-01",
            "name": "[parameters('bastionName')]",
            "location": "[parameters('location')]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "[concat('ipc-', parameters('bastionName'))]",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat('pip-', parameters('bastionName')))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), 'AzureBastionSubnet')]"
                            }
                        }
                    }
                ]
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
                "[resourceId('Microsoft.Network/publicIPAddresses', concat('pip-', parameters('bastionName')))]"
            ]
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2023-04-01",
            "name": "[concat('nic-', parameters('vmAddsName'), '1')]",
            "location": "[parameters('location')]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "[concat('ipc-', parameters('vmAddsName'), '1')]",
                        "properties": {
                            "privateIPAllocationMethod": "[parameters('vmAddsNicPrivateIpAllocationMethod')]",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), 'snet-adds-01')]"
                            }
                        } 
                    }
                ]
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
            ]
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2023-03-01",
            "name": "[parameters('vmAddsName')]",
            "location": "[parameters('location')]",
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmAddsSize')]"
                },
                "osProfile": {
                    "computerName": "[parameters('vmAddsName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[concat('P-', uniqueString(resourceGroup().id, deployment().name))]",
                    "windowsConfiguration": {
                        "enableAutomaticUpdates": true,
                        "patchSettings": {
                            "patchMode": "AutomaticByOS"
                        }
                    }
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[parameters('vmAddsImagePublisher')]",
                        "offer": "[parameters('vmAddsImageOffer')]",
                        "sku": "[parameters('vmAddsImageSku')]",
                        "version": "[parameters('vmAddsImageVersion')]"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
                        "caching": "[parameters('vmAddsStorageAccountCaching')]",
                        "managedDisk": {
                            "storageAccountType": "[parameters('vmAddsStorageAccountType')]"
                        }
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat('nic-', parameters('vmAddsName'), '1'))]"
                        }
                    ]
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', concat('nic-', parameters('vmAddsName'), '1'))]"
            ]
        }
    ],
    "outputs": {
        "vnetNameM1": {
            "type": "string",
            "value": "[parameters('vnetName')]"
        },
        "keyVaultId": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.KeyVault/vaults', concat('kv-', uniqueString(resourceGroup().id))), '2023-02-01', 'Full').resourceId]"
        },
        "storageAccountId": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', concat('st', uniqueString(resourceGroup().id))), '2023-01-01', 'Full').resourceId]"
        }
    }
}