{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "string"
        },
        "adminPassword": {
            "type": "securestring"
        },
        "vnetNameM2": {
            "type": "string",
            "metadata": {
                "description": "The name of the application virtual network."
            },
            "defaultValue": "vnet-app-01"
        },
        "vnetNameM1": {
            "type": "string"
        },
        "vnetAddressPrefixM2": {
            "type": "string",
            "metadata": {
                "description": "The address space in CIDR notation for the new application virtual network."
            },
            "defaultValue": "10.2.0.0/16"
        },
        "subnetsDetails": {
            "type": "object",
            "metadata": {
                "description": "The details of application virtual network subnets."
            },
            "defaultValue": {
                "subnets": [
                    {
                        "name": "snet-app-01",
                        "addressPrefix": "10.2.0.0/24",
                        "privateEndpointNetworkPolicies": "Disabled",
                        "securityRules": [
                            {
                            "name": "AllowVirtualNetworkInbound",
                            "properties": {
                                "direction": "Inbound",
                                "priority": 100,
                                "sourceAddressPrefix": "VirtualNetwork",
                                "destinationAddressPrefix": "VirtualNetwork",
                                "sourcePortRange": "*",
                                "destinationPortRanges": [],
                                "destinationPortRange": "*",
                                "access": "Allow",
                                "protocol": "*"
                            }},
                            {
                            "name": "AllowVirtualNetworkOutbound",
                            "properties": {
                                "direction": "Outbound",
                                "priority": 110,
                                "sourceAddressPrefix": "VirtualNetwork",
                                "destinationAddressPrefix": "VirtualNetwork",
                                "sourcePortRange": "*",
                                "destinationPortRanges": [],
                                "destinationPortRange": "*",
                                "access": "Allow",
                                "protocol": "*"
                            }},
                            {
                            "name": "AllowInternetOutbound",
                            "properties": {
                                "direction": "Outbound",
                                "priority": 120,
                                "sourceAddressPrefix": "*",
                                "destinationAddressPrefix": "Internet",
                                "sourcePortRange": "*",
                                "destinationPortRanges": [],
                                "destinationPortRange": "*",
                                "access": "Allow",
                                "protocol": "*"
                            }}
                        ]
                    },
                    {
                        "name": "snet-db-01",
                        "addressPrefix": "10.2.1.0/24",
                        "privateEndpointNetworkPolicies": "Disabled",
                        "securityRules": [
                            {
                            "name": "AllowVirtualNetworkInbound",
                            "properties": {
                                "direction": "Inbound",
                                "priority": 100,
                                "sourceAddressPrefix": "VirtualNetwork",
                                "destinationAddressPrefix": "VirtualNetwork",
                                "sourcePortRange": "*",
                                "destinationPortRanges": [],
                                "destinationPortRange": "*",
                                "access": "Allow",
                                "protocol": "*"
                            }},
                            {
                            "name": "AllowVirtualNetworkOutbound",
                            "properties": {
                                "direction": "Outbound",
                                "priority": 110,
                                "sourceAddressPrefix": "VirtualNetwork",
                                "destinationAddressPrefix": "VirtualNetwork",
                                "sourcePortRange": "*",
                                "destinationPortRanges": [],
                                "destinationPortRange": "*",
                                "access": "Allow",
                                "protocol": "*"
                            }},
                            {
                            "name": "AllowInternetOutbound",
                            "properties": {
                                "direction": "Outbound",
                                "priority": 120,
                                "sourceAddressPrefix": "*",
                                "destinationAddressPrefix": "Internet",
                                "sourcePortRange": "*",
                                "destinationPortRanges": [],
                                "destinationPortRange": "*",
                                "access": "Allow",
                                "protocol": "*"
                            }}
                        ]
                    },
                    {
                        "name": "snet-misc-03",
                        "addressPrefix": "10.2.3.0/24",
                        "privateEndpointNetworkPolicies": "Disabled",
                        "securityRules": [
                            {
                            "name": "AllowVirtualNetworkInbound",
                            "properties": {
                                "direction": "Inbound",
                                "priority": 100,
                                "sourceAddressPrefix": "VirtualNetwork",
                                "destinationAddressPrefix": "VirtualNetwork",
                                "sourcePortRange": "*",
                                "destinationPortRanges": [],
                                "destinationPortRange": "*",
                                "access": "Allow",
                                "protocol": "*"
                            }},
                            {
                            "name": "AllowVirtualNetworkOutbound",
                            "properties": {
                                "direction": "Outbound",
                                "priority": 110,
                                "sourceAddressPrefix": "VirtualNetwork",
                                "destinationAddressPrefix": "VirtualNetwork",
                                "sourcePortRange": "*",
                                "destinationPortRanges": [],
                                "destinationPortRange": "*",
                                "access": "Allow",
                                "protocol": "*"
                            }},
                            {
                            "name": "AllowInternetOutbound",
                            "properties": {
                                "direction": "Outbound",
                                "priority": 120,
                                "sourceAddressPrefix": "*",
                                "destinationAddressPrefix": "Internet",
                                "sourcePortRange": "*",
                                "destinationPortRanges": [],
                                "destinationPortRange": "*",
                                "access": "Allow",
                                "protocol": "*"
                            }}
                        ]
                    },
                    {
                        "name": "snet-privatelink-01",
                        "addressPrefix": "10.2.2.0/24",
                        "privateEndpointNetworkPolicies": "Disabled",
                        "securityRules": [
                            {
                            "name": "AllowVirtualNetworkInbound",
                            "properties": {
                                "direction": "Inbound",
                                "priority": 100,
                                "sourceAddressPrefix": "VirtualNetwork",
                                "destinationAddressPrefix": "VirtualNetwork",
                                "sourcePortRange": "*",
                                "destinationPortRanges": [],
                                "destinationPortRange": "*",
                                "access": "Allow",
                                "protocol": "*"
                            }},
                            {
                            "name": "AllowVirtualNetworkOutbound",
                            "properties": {
                                "direction": "Outbound",
                                "priority": 110,
                                "sourceAddressPrefix": "VirtualNetwork",
                                "destinationAddressPrefix": "VirtualNetwork",
                                "sourcePortRange": "*",
                                "destinationPortRanges": [],
                                "destinationPortRange": "*",
                                "access": "Allow",
                                "protocol": "*"
                            }}
                        ]
                    }
                ]
            }
        },
        "privateDNSZones": {
            "type": "array",
            "metadata": {
                "description": "description"
            },
            "defaultValue": [
                "privatelink.database.windows.net",
                "privatelink.file.core.windows.net",
                "privatelink.mysql.database.azure.com"
            ]
        },
        "vmJumpboxWinName": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultValue": "jumpwin1"
        },
        "vmJumpboxWinSize": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultValue": "Standard_B1s"
        },
        "vmJumpboxWinImagePublisher": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultValue": "MicrosoftWindowsServer"
        },
        "vmJumpboxWinImageOffer": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultValue": "WindowsServer"
        },
        "vmJumpboxWinImageSku": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultValue": "2022-datacenter-g2"
        },
        "vmJumpboxWinImageVersion": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultValue": "Latest"
        },
        "vmJumpboxWinStorageAccountType": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultValue": "Standard_LRS"
        },
        "vmJumpboxLinuxName": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultValue": "jumplinux1"
        },
        "vmJumpboxLinuxSize": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultValue": "Standard_B2s"
        },
        "vmJumpboxLinuxImagePublisher": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultValue": "Canonical"
        },
        "vmJumpboxLinuxImageOffer": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultValue": "0001-com-ubuntu-server-jammy"
        },
        "vmJumpboxLinuxImageSku": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultValue": "22_04-lts-gen2"
        },
        "vmJumpboxLinuxImageVersion": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultValue": "Latest"
        },
        "vmJumpboxLinuxStorageAccountType": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultValue": "Standard_LRS"
        },
        "keyVaultId": {
            "type": "string"
        },
        "storageAccountId": {
            "type": "string"
        },
        "storageShareName": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultValue": "myfileshare"
        },
        "storageShareQuota": {
            "type": "int",
            "metadata": {
                "description": "description"
            },
            "defaultValue": 1024
        }
    },
    "variables": {
        "keyVaultName": "[last(split(parameters('keyVaultId'), '/'))]",
        "storageAccountName": "[last(split(parameters('storageAccountId'), '/'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2023-04-01",
            "name": "[parameters('vnetNameM2')]",
            "location": "[resourceGroup().location]",
            "tags": {},
            "properties": {
                "dhcpOptions": {
                    "dnsServers": ["10.1.1.4", "168.63.129.16"]
                },
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('vnetAddressPrefixM2')]"
                  ]
                },
                "copy": [
                    {
                        "name": "subnets",
                        "dependsOn": [
                            "[resourceId('Microsoft.Network/networkSecurityGroups/', concat('nsg-', parameters('vnetNameM2'), '.', parameters('subnetsDetails').subnets[copyIndex('subnets')].name))]"
                        ],
                        "count": "[length(parameters('subnetsDetails').subnets)]",
                        "input": {
                            "name": "[parameters('subnetsDetails').subnets[copyIndex('subnets')].name]",
                            "properties": {
                                "addressPrefix": "[parameters('subnetsDetails').subnets[copyIndex('subnets')].addressPrefix]",
                                "privateEndpointNetworkPolicies": "[parameters('subnetsDetails').subnets[copyIndex('subnets')].privateEndpointNetworkPolicies]",
                                "networkSecurityGroup": {
                                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups/', concat('nsg-', parameters('vnetNameM2'), '.', parameters('subnetsDetails').subnets[copyIndex('subnets')].name))]"
                                }
                            }
                        }
                    }
                ]
            },
            "dependsOn": [
                "NSG"
            ]
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2023-04-01",
            "location": "[resourceGroup().location]",
            "name": "[concat('nsg-', parameters('vnetNameM2'), '.', parameters('subnetsDetails').subnets[copyIndex()].name)]",
            "properties": {
                "securityRules": "[parameters('subnetsDetails').subnets[copyIndex()].securityRules]"
            },
            "copy": {
                "name": "NSG",
                "count": "[length(parameters('subnetsDetails').subnets)]"
            }
        },
        {
            "apiVersion": "2019-11-01",
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "name": "[concat(parameters('vnetNameM2'), '/', 'vnet_app_01_to_vnet_shared_01_peering')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetNameM2'))]"
            ],
            "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": true,
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/', parameters('vnetNameM1'))]"
                }
            }
        },
        {
            "apiVersion": "2019-11-01",
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "name": "[concat(parameters('vnetNameM1'), '/', 'vnet_shared_01_to_vnet_app_01_peering')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetNameM2'))]"
            ],
            "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": true,
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/', parameters('vnetNameM2'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2020-06-01",
            "name": "[parameters('privateDNSZones')[copyIndex()]]",
            "location": "global",
            "copy": {
                "name": "privateDNS",
                "count": "[length(parameters('privateDNSZones'))]"
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2020-06-01",
            "name": "[format('{0}/{1}', parameters('privateDNSZones')[copyIndex()], concat('pdnslink-', parameters('privateDNSZones')[copyIndex()], '-', parameters('vnetNameM2')))]",
            "location": "global",
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetNameM2'))]"
                }
            },
            "copy": {
                "name": "privateDNS",
                "count": "[length(parameters('privateDNSZones'))]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones')[copyIndex()])]",
                "[resourceId('Microsoft.Network/virtualNetworks/virtualNetworkPeerings', parameters('vnetNameM2'), 'vnet_app_01_to_vnet_shared_01_peering')]",
                "[resourceId('Microsoft.Network/virtualNetworks/virtualNetworkPeerings', parameters('vnetNameM1'), 'vnet_shared_01_to_vnet_app_01_peering')]"
            ]
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2020-06-01",
            "name": "[format('{0}/{1}', parameters('privateDNSZones')[copyIndex()], concat('pdnslink-', parameters('privateDNSZones')[copyIndex()], '-', parameters('vnetNameM1')))]",
            "location": "global",
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetNameM1'))]"
                }
            },
            "copy": {
                "name": "privateDNS",
                "count": "[length(parameters('privateDNSZones'))]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones')[copyIndex()])]",
                "[resourceId('Microsoft.Network/virtualNetworks/virtualNetworkPeerings', parameters('vnetNameM2'), 'vnet_app_01_to_vnet_shared_01_peering')]",
                "[resourceId('Microsoft.Network/virtualNetworks/virtualNetworkPeerings', parameters('vnetNameM1'), 'vnet_shared_01_to_vnet_app_01_peering')]"
            ]
        },
        // {
        //     "type": "Microsoft.Network/networkInterfaces",
        //     "apiVersion": "2023-04-01",
        //     "name": "[concat('nic-', parameters('vmJumpboxWinName'), '-1')]",
        //     "location": "[resourceGroup().location]",
        //     "properties": {
        //         "ipConfigurations": [
        //             {
        //                 "name": "[concat('ipc-', parameters('vmJumpboxWinName'), '-1')]",
        //                 "properties": {
        //                     "privateIPAllocationMethod": "Dynamic",
        //                     "subnet": {
        //                         "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetNameM2'), 'snet-app-01')]"
        //                     }
        //                 } 
        //             }
        //         ]
        //     },
        //     "dependsOn": [
        //         "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetNameM2'))]"
        //     ]
        // },
        // {
        //     "type": "Microsoft.Compute/virtualMachines",
        //     "apiVersion": "2023-03-01",
        //     "name": "[parameters('vmJumpboxWinName')]",
        //     "location": "[resourceGroup().location]",
        //     "properties": {
        //         "hardwareProfile": {
        //             "vmSize": "[parameters('vmJumpboxWinSize')]"
        //         },
        //         "osProfile": {
        //             "computerName": "[parameters('vmJumpboxWinName')]",
        //             "adminUsername": "[parameters('adminUsername')]",
        //             "adminPassword": "[parameters('adminPassword')]",
        //             "windowsConfiguration": {
        //                 "enableAutomaticUpdates": false,
        //                 "patchSettings": {
        //                     "patchMode": "Manual"
        //                 }
        //             }
        //         },
        //         "storageProfile": {
        //             "imageReference": {
        //                 "publisher": "[parameters('vmJumpboxWinImagePublisher')]",
        //                 "offer": "[parameters('vmJumpboxWinImageOffer')]",
        //                 "sku": "[parameters('vmJumpboxWinImageSku')]",
        //                 "version": "[parameters('vmJumpboxWinImageVersion')]"
        //             },
        //             "osDisk": {
        //                 "createOption": "FromImage",
        //                 "caching": "ReadWrite",
        //                 "managedDisk": {
        //                     "storageAccountType": "[parameters('vmJumpboxWinStorageAccountType')]"
        //                 }
        //             }
        //         },
        //         "networkProfile": {
        //             "networkInterfaces": [
        //                 {
        //                     "id": "[resourceId('Microsoft.Network/networkInterfaces', concat('nic-', parameters('vmJumpboxWinName'), '-1'))]"
        //                 }
        //             ]
        //         }
        //     },
        //     "dependsOn": [
        //         "[resourceId('Microsoft.Network/networkInterfaces', concat('nic-', parameters('vmJumpboxWinName'), '-1'))]"
        //     ]
        // },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2023-04-01",
            "name": "[concat('nic-', parameters('vmJumpboxLinuxName'), '-1')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "[concat('ipc-', parameters('vmJumpboxLinuxName'), '-1')]",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetNameM2'), 'snet-app-01')]"
                            }
                        } 
                    }
                ]
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetNameM2'))]"
            ]
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2023-03-01",
            "name": "[parameters('vmJumpboxLinuxName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmJumpboxLinuxSize')]"
                },
                "osProfile": {
                    "computerName": "[parameters('vmJumpboxLinuxName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": false
                    }
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[parameters('vmJumpboxLinuxImagePublisher')]",
                        "offer": "[parameters('vmJumpboxLinuxImageOffer')]",
                        "sku": "[parameters('vmJumpboxLinuxImageSku')]",
                        "version": "[parameters('vmJumpboxLinuxImageVersion')]"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "[parameters('vmJumpboxLinuxStorageAccountType')]"
                        }
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat('nic-', parameters('vmJumpboxLinuxName'), '-1'))]"
                        }
                    ]
                }
            },
            "identity": {
                "type": "SystemAssigned"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', concat('nic-', parameters('vmJumpboxLinuxName'), '-1'))]"
            ]
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2022-09-01",
            "name": "addAccessPolicy",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines/', parameters('vmJumpboxLinuxName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                        {
                            "type": "Microsoft.KeyVault/vaults/accessPolicies",
                            "name": "[concat(variables('keyVaultName'), '/add')]",
                            "apiVersion": "2023-02-01",
                            "properties": {
                                "accessPolicies": [
                                {
                                    "tenantId": "[subscription().tenantId]",
                                    "objectId": "[reference(resourceId('Microsoft.Compute/virtualMachines/', parameters('vmJumpboxLinuxName')), '2023-03-01', 'Full').identity.principalId]",
                                    "permissions": {
                                    "secrets": ["get"]
                                    }
                                }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
            "apiVersion": "2023-01-01",
            "name": "[concat(variables('storageAccountName'), '/default/', parameters('storageShareName'))]",
            "properties": {
                "shareQuota": "[parameters('storageShareQuota')]"
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2023-04-01",
            "name": "[concat('pend-', variables('storageAccountName'), '-file')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "subnet": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetNameM2'), 'snet-privatelink-01')]"
                },
                "privateLinkServiceConnections": [
                    {
                        "name": "azure_files",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                            "groupIds": ["file"]
                        }
                    }
                ]
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', concat('nsg-', parameters('vnetNameM2'), '.', parameters('subnetsDetails').subnets[3].name))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetNameM2'))]"
            ]
        },
        {
            "type": "Microsoft.Network/privateDnsZones/A",
            "apiVersion": "2020-06-01",
            "name": "[format('{0}/{1}', 'privatelink.file.core.windows.net', variables('storageAccountName'))]",
            "properties": {
                "ttl": 300,
                "aRecords": [
                {
                    "ipv4Address": "[first(first(reference(resourceId('Microsoft.Network/privateEndpoints', concat('pend-', variables('storageAccountName'), '-file')), '2023-04-01').customDnsConfigs).ipAddresses)]"
                }
                ]
            },
            "dependsOn": [
                "privateDNS",
                "[resourceId('Microsoft.Network/privateEndpoints', concat('pend-', variables('storageAccountName'), '-file'))]"
            ] 
        }
    ],
    "outputs": {
        "vnetNameM2": {
            "type": "string",
            "value": "[parameters('vnetNameM2')]"
        }
    }
}